package com.weips.designpattern.flyweight;

/**
 * 享元模式是对象池的一种实现，Flyweight--轻量级
 *
 * 享元模式用来尽可能减少内存使用量，它适用于可能存在大量重复对象的场景，来缓存可共享的对象，达到对象共享、避免
 * 创建过多对象的效果，可以提升性能、避免内存溢出等。
 *
 * 享元对象中可以共享的状态称为内部状态，内部状态不会随着环境变化；不可共享的状态称为外部状态，它们会随着环境的
 * 改变而改变。
 *
 * 在享元模式中会建立一个对象容器，它的键是享元对象的内部状态，它的值就是享元对象本身。客户端通过这个内部状态从
 * 享元工厂中获取享元对象，如果有缓存则使用缓存对象，否则创建一个享元对象并且存入容器中。
 *
 */
public interface Ticket {
    void showTicketInfo(String bunk);
}
